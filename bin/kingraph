#!/usr/bin/env node
const render = require('../lib/render');
const all = Promise.all.bind(Promise);
const fs = require('fs');
const path = require('path');
const meow = require('meow');
const { version } = require('os');
const cli = meow(`
  Usage:
    $ kingraph INPUT.yaml

  Options:
    -h, --help         show usage information
    -v, --version      print version info and exit
    -F, --format=svg   format (svg, png, dot)
`, {
    flags: {
        help: {type: 'boolean', alias: 'r'},
        version: {type: 'boolean', alias: 'v'},
        format: {type: 'string', alias: 'F'}
    }
});

require('read-input')(cli.input)
.then(res => {
    return all(res.files.map(file => {
        const input = require('js-yaml').safeLoad(file.data);
        const format = cli.flags.format || 'png';

        return render(input, { format, async: true })
        .then(result => {
            let fileOutput = cli.input[0];
            fileOutput = fileOutput.substr(0, fileOutput.lastIndexOf(".")) + `.${format}`;
            fs.writeFile(fileOutput, result, err=>{
                if (err){
                    console.error(err)
                    return
                }
                console.log(`File exported to: '${path.join(process.cwd(), fileOutput)}'`)
            })
        });
    }));
})
.catch(err => {
    console.error(err);
    process.exit(8);
});
